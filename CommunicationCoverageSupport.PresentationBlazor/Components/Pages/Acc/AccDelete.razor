@page "/acc/delete/{Id:int}"
@inject IAccService AccService
@inject NavigationManager Nav
@rendermode RenderMode.InteractiveServer

<h3>Delete Account?</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}
else if (accModel == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="alert alert-warning">
        Are you sure you want to delete "<strong>@accModel.Name</strong>"?
    </div>
    <button class="btn btn-danger" @onclick="DeleteItem">Yes, delete</button>
    <button type="button" class="btn btn-secondary ms-2" @onclick="() => NavigateToAcc()">Cancel</button>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private AccDto? accModel;
    private string? errorMessage;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var result = await AccService.GetByIdAsync(Id);
            if (result.IsSuccess)
                accModel = result.Data;
            else
                errorMessage = result.Message;

            StateHasChanged();
        }
    }

    private async Task DeleteItem()
    {
        var result = await AccService.DeleteAsync(Id);
        if (result.IsSuccess)
            NavigateToAcc();
        else
            errorMessage = result.Message;
    }

    private void NavigateToAcc()
    {
        Nav.NavigateTo("/acc");
    }
}
