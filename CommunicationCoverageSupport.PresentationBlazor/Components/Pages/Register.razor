@page "/register"
@using System.ComponentModel.DataAnnotations
@inject IAuthService AuthService

<h3 class="mb-4">Register</h3>

<EditForm Model="registerModel" OnValidSubmit="Submit" FormName="RegisterForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="username" class="form-label">Username</label>
        <InputText id="username" class="form-control" @bind-Value="registerModel.Username" />
    </div>
    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText id="password" class="form-control" type="password" @bind-Value="registerModel.Password" />
    </div>
    <div class="mb-3">
        <label for="role" class="form-label">Role</label>
        <InputText id="role" class="form-control" @bind-Value="registerModel.Role" />
    </div>
    <button type="submit" class="btn btn-success">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-info mt-3">@message</div>
}

@code {
    [SupplyParameterFromForm]
    private UserRegisterDto? registerModel { get; set; }
    private string? message;

    protected override void OnInitialized() => registerModel ??= new();


    private async Task Submit()
    {
        if (registerModel is null ||
         string.IsNullOrWhiteSpace(registerModel.Username) ||
         string.IsNullOrWhiteSpace(registerModel.Password) ||
         string.IsNullOrWhiteSpace(registerModel.Role))
        {
            message = "Some fields are missing. Please fill in all required fields.";
            return;
        }
        var result = await AuthService.RegisterAsync(registerModel);
        message = result ?? "Registration failed. Please try again.";
    }

}
