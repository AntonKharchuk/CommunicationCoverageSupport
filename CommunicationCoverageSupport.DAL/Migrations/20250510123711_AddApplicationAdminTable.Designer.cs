// <auto-generated />
using CommunicationCoverageSupport.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommunicationCoverageSupport.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250510123711_AddApplicationAdminTable")]
    partial class AddApplicationAdminTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ApplicationAdmin", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("ApplicationAdmins");
                });

            modelBuilder.Entity("CommunicationCoverageSupport.Models.Entities.Acc", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Accs");
                });

            modelBuilder.Entity("CommunicationCoverageSupport.Models.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CommunicationCoverageSupport.Models.Entities.Artwork", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Artworks");
                });

            modelBuilder.Entity("CommunicationCoverageSupport.Models.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("CommunicationCoverageSupport.Models.Entities.SimCard", b =>
                {
                    b.Property<string>("Iccid")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<byte>("AccId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<long>("Adm1")
                        .HasColumnType("bigint");

                    b.Property<byte>("ArtworkId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("CardOwnerId")
                        .HasColumnType("int");

                    b.Property<long>("Imsi")
                        .HasColumnType("bigint");

                    b.Property<bool>("Installed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Kl1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("Msisdn")
                        .HasColumnType("bigint");

                    b.Property<short>("Pin1")
                        .HasColumnType("smallint");

                    b.Property<short>("Pin2")
                        .HasColumnType("smallint");

                    b.Property<bool>("Produced")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Puk1")
                        .HasColumnType("int");

                    b.Property<int>("Puk2")
                        .HasColumnType("int");

                    b.Property<bool>("Purged")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Iccid");

                    b.HasIndex("AccId");

                    b.HasIndex("ArtworkId");

                    b.HasIndex("CardOwnerId");

                    b.ToTable("SimCards");
                });

            modelBuilder.Entity("ApplicationAdmin", b =>
                {
                    b.HasOne("CommunicationCoverageSupport.Models.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CommunicationCoverageSupport.Models.Entities.ApplicationUser", b =>
                {
                    b.HasOne("CommunicationCoverageSupport.Models.Entities.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CommunicationCoverageSupport.Models.Entities.SimCard", b =>
                {
                    b.HasOne("CommunicationCoverageSupport.Models.Entities.Acc", "Acc")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommunicationCoverageSupport.Models.Entities.Artwork", "Artwork")
                        .WithMany()
                        .HasForeignKey("ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommunicationCoverageSupport.Models.Entities.ApplicationUser", "CardOwner")
                        .WithMany()
                        .HasForeignKey("CardOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc");

                    b.Navigation("Artwork");

                    b.Navigation("CardOwner");
                });

            modelBuilder.Entity("CommunicationCoverageSupport.Models.Entities.Company", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
